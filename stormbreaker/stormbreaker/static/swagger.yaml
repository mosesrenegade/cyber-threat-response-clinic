swagger: '2.0'
info:
  title: CTRC Stormbreaker APIs
  description: Cyber Threat Response Clinic - Cloud Resource Management APIs
  version: 0.1.0


basePath: /api
schemes:
  - http


consumes:
  - application/json
produces:
  - application/json


tags:
  - name: Cloud Accounts
  - name: dCloud
  - name: Admin


paths:

  /cloud/accounts:
    post:
      summary: load or replace the Cloud Account list
      operationId: post_cloud_accounts
      description: List all provisioned Cloud Accounts.
      tags:
        - Cloud Accounts
        - Admin
      responses:
        201:
          description: Created
        400:
          description: Bad Request
    get:
      summary: list Cloud Accounts
      operationId: list_cloud_accounts
      description: List all provisioned Cloud Accounts.
      tags:
        - Cloud Accounts
        - Admin
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/definitions/CloudAccount"


  /cloudAccounts/{login}:
    parameters:
    - name: login
      description: Cloud Account login user ID.
      in: path
      required: true
      type: string

    get:
      summary: get Cloud Account details
      operationId: get_cloud_account_details
      description: Get the details for a Cloud Account.
      tags:
        - Cloud Accounts
        - Admin
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CloudAccount"
        404:
          description: Not Found

  /cloud/accounts/assign:
    post:
      summary: assign a Cloud Account
      operationId: assign_cloud_account
      description: Assign a Cloud Account login to a new dCloud sessions.
      tags:
        - Cloud Accounts
      parameters:
        - name: sessionId
          description: dCloud Session ID
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CloudAccount"
        400:
          description: Bad Request
        500:
          description: No Accounts Available


  /dcloud/sessions:
    get:
      summary: list active dCloud sessions
      operationId: list_dcloud_sessions
      description: >
        List all active dCloud sessions.
      tags:
        - dCloud
        - Admin
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/dCloudSession"


  /dcloud/sessions/{sessionId}:
    parameters:
      - name: sessionId
        description: dCloud Session ID
        in: path
        required: true
        type: string

    get:
      summary: get dCloud session details
      operationId: get_dcloud_session_details
      description: Get active dCloud session details, by ID.
      tags:
        - dCloud
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/dCloudSession"

    put:
      summary: heartbeat events from active dCloud sessions
      operationId: dcloud_session_update
      description: >
        Active dCloud sessions should periodically send heartbeat posts to this
        API endpoint to indicate that they are still active.
      tags:
        - dCloud
      parameters:
        - in: body
          description: Data to be written to the schema-less MondoDB datastore.
          required: true
          content:
            application/json:
              schema:
                type: object
    responses:
        200:
          description: OK
        400:
          description: Bad Request


definitions:

  CloudAccount:
    type: object
    required:
      - login
      - password
      - status
    properties:
      login:
        type: string
        example: ctrlab+1@cisco.com
      password:
        type: string
        example: secret_password
      status:
        type: string
        enum: [available, assigned, cleaning, cleanup-failed]
        example: assigned

  dCloudSession:
    type: object
    required:
      - sessionId
      - lastCheckIn
    properties:
      sessionId:
        type: string
        example: 549926
      lastCheckIn:
        type: string
        format: date-time
        example: Thu, 20 Sep 2018 07:13:16 GMT
      cloudAccount:
        $ref: '#/definitions/CloudAccount'
