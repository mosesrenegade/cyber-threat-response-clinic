version: '3'

services:

  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
    - 80:80
    - 443:443
    environment:
      FLASK_HOST: "flask"    
      FLASK_URL: "http://flask:5000"
    

  flask:
    build:
      context: .
    depends_on:
      - mongo
      - nginx
    environment:
      FLASK_ENV: "development"
      MONGO_URL: "mongodb://mongo:27017"
    volumes:
      - "./:/app/"
    command: ["flask", "run", "-h", "0.0.0.0", "-p", "5000"]
    ports:
      - "5000:5000"
#    restart: always

  celery-scheduler:
    build:
      context: .
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_URL: "mongodb://mongo:27017"
      REDIS_URL: "redis://redis:6379"
      REDIS_CELERY_BROKER_DATABASE: "1"
      REDIS_CELERY_RESULTS_DATABASE: "2"
    command: ["celery", "-A", "stormbreaker.celery:app", "beat", "-l", "info"]
#    restart: always

  celery-worker:
    build:
      context: .
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_URL: "mongodb://mongo:27017"
      REDIS_URL: "redis://redis:6379"
      REDIS_CELERY_BROKER_DATABASE: "1"
      REDIS_CELERY_RESULTS_DATABASE: "2"
      DCLOUD_SESSION_EXPIRATION_TIME: "3"
      SELENIUM_COMMAND_EXECUTOR_URL: "http://selenium:4444/wd/hub"
    command: ["celery", "-A", "stormbreaker.celery:app", "worker", "-l", "info"]
#    restart: always

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
#    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
#    restart: always

  mongo-express:
    image: mongo-express:latest
    depends_on:
      - mongo
    ports:
      - "8081:8081"
#    restart: always

  selenium:
    image: selenium/standalone-chrome-debug:latest
    ports:
      - "4444:4444"
      - "5900:5900"
#    restart: always
